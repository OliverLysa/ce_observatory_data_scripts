{
  "version": 3,
  "sources": ["../../../../../node_modules/threads/dist/serializers.js", "../../../../../node_modules/threads/dist/common.js", "../../../../../node_modules/threads/dist/master/get-bundle-url.browser.js", "../../../../../node_modules/threads/dist/master/implementation.browser.js", "../../../../../node_modules/ms/index.js", "../../../../../node_modules/debug/src/common.js", "../../../../../node_modules/debug/src/browser.js", "../../../../../node_modules/observable-fns/dist.esm/_scheduler.js", "../../../../../node_modules/observable-fns/dist.esm/symbols.js", "../../../../../node_modules/observable-fns/dist.esm/_symbols.js", "../../../../../node_modules/observable-fns/dist.esm/observable.js", "../../../../../node_modules/observable-fns/dist.esm/unsubscribe.js", "../../../../../node_modules/observable-fns/dist.esm/filter.js", "../../../../../node_modules/observable-fns/dist.esm/_util.js", "../../../../../node_modules/observable-fns/dist.esm/flatMap.js", "../../../../../node_modules/observable-fns/dist.esm/interval.js", "../../../../../node_modules/observable-fns/dist.esm/map.js", "../../../../../node_modules/observable-fns/dist.esm/merge.js", "../../../../../node_modules/observable-fns/dist.esm/subject.js", "../../../../../node_modules/observable-fns/dist.esm/multicast.js", "../../../../../node_modules/observable-fns/dist.esm/scan.js", "../../../../../node_modules/observable-fns/dist.esm/index.js", "../../../../../node_modules/threads/dist/ponyfills.js", "../../../../../node_modules/threads/dist/master/pool-types.js", "../../../../../node_modules/threads/dist/symbols.js", "../../../../../node_modules/threads/dist/master/thread.js", "../../../../../node_modules/threads/dist/master/pool.js", "../../../../../node_modules/threads/dist/promise.js", "../../../../../node_modules/threads/dist/types/master.js", "../../../../../node_modules/threads/dist/observable-promise.js", "../../../../../node_modules/threads/dist/transferable.js", "../../../../../node_modules/threads/dist/types/messages.js", "../../../../../node_modules/threads/dist/master/invocation-proxy.js", "../../../../../node_modules/threads/dist/master/spawn.js", "../../../../../node_modules/threads/dist/master/index.js", "../../../../../node_modules/is-observable/index.js", "../../../../../node_modules/threads/dist/worker/implementation.browser.js", "../../../../../node_modules/threads/dist/worker/index.js", "../../../../../node_modules/threads/dist/index.js", "../../../../../node_modules/threads/index.mjs", "../../../../../node_modules/threads/worker.mjs", "../../../../../node_modules/@sdeverywhere/runtime-async/src/runner.ts", "../../../../../node_modules/@sdeverywhere/runtime-async/src/worker.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n", "\"use strict\";\n// Source: <https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/builtins/bundle-url.js>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBundleURL = exports.getBaseURL = void 0;\nlet bundleURL;\nfunction getBundleURLCached() {\n    if (!bundleURL) {\n        bundleURL = getBundleURL();\n    }\n    return bundleURL;\n}\nexports.getBundleURL = getBundleURLCached;\nfunction getBundleURL() {\n    // Attempt to find the URL of the current script and use that as the base URL\n    try {\n        throw new Error;\n    }\n    catch (err) {\n        const matches = (\"\" + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n        if (matches) {\n            return getBaseURL(matches[0]);\n        }\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\nexports.getBaseURL = getBaseURL;\n", "\"use strict\";\n// tslint:disable max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWorkerRuntime = exports.getWorkerImplementation = exports.defaultPoolSize = void 0;\nconst get_bundle_url_browser_1 = require(\"./get-bundle-url.browser\");\nexports.defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    class WebWorker extends Worker {\n        constructor(url, options) {\n            var _a, _b;\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && get_bundle_url_browser_1.getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, get_bundle_url_browser_1.getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            super(url, options);\n        }\n    }\n    class BlobWorker extends WebWorker {\n        constructor(blob, options) {\n            const url = window.URL.createObjectURL(blob);\n            super(url, options);\n        }\n        static fromText(source, options) {\n            const blob = new window.Blob([source], { type: \"text/javascript\" });\n            return new BlobWorker(blob, options);\n        }\n    }\n    return {\n        blob: BlobWorker,\n        default: WebWorker\n    };\n}\nlet implementation;\nfunction getWorkerImplementation() {\n    if (!implementation) {\n        implementation = selectWorkerImplementation();\n    }\n    return implementation;\n}\nexports.getWorkerImplementation = getWorkerImplementation;\nfunction isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}\nexports.isWorkerRuntime = isWorkerRuntime;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class AsyncSerialScheduler {\n    constructor(observer) {\n        this._baseObserver = observer;\n        this._pendingPromises = new Set();\n    }\n    complete() {\n        Promise.all(this._pendingPromises)\n            .then(() => this._baseObserver.complete())\n            .catch(error => this._baseObserver.error(error));\n    }\n    error(error) {\n        this._baseObserver.error(error);\n    }\n    schedule(task) {\n        const prevPromisesCompletion = Promise.all(this._pendingPromises);\n        const values = [];\n        const next = (value) => values.push(value);\n        const promise = Promise.resolve()\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            yield prevPromisesCompletion;\n            yield task(next);\n            this._pendingPromises.delete(promise);\n            for (const value of values) {\n                this._baseObserver.next(value);\n            }\n        }))\n            .catch(error => {\n            this._pendingPromises.delete(promise);\n            this._baseObserver.error(error);\n        });\n        this._pendingPromises.add(promise);\n    }\n}\n", "export {};\n", "export const hasSymbols = () => typeof Symbol === \"function\";\nexport const hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nexport const getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nexport function registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n", "/**\n * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>\n * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6\n */\nimport \"./symbols\";\nimport { getSymbol, hasSymbol, hasSymbols } from \"./_symbols\";\nconst SymbolIterator = getSymbol(\"iterator\");\nconst SymbolObservable = getSymbol(\"observable\");\nconst SymbolSpecies = getSymbol(\"species\");\n// === Abstract Operations ===\nfunction getMethod(obj, key) {\n    const value = obj[key];\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value !== \"function\") {\n        throw new TypeError(value + \" is not a function\");\n    }\n    return value;\n}\nfunction getSpecies(obj) {\n    let ctor = obj.constructor;\n    if (ctor !== undefined) {\n        ctor = ctor[SymbolSpecies];\n        if (ctor === null) {\n            ctor = undefined;\n        }\n    }\n    return ctor !== undefined ? ctor : Observable;\n}\nfunction isObservable(x) {\n    return x instanceof Observable; // SPEC: Brand check\n}\nfunction hostReportError(error) {\n    if (hostReportError.log) {\n        hostReportError.log(error);\n    }\n    else {\n        setTimeout(() => { throw error; }, 0);\n    }\n}\nfunction enqueue(fn) {\n    Promise.resolve().then(() => {\n        try {\n            fn();\n        }\n        catch (e) {\n            hostReportError(e);\n        }\n    });\n}\nfunction cleanupSubscription(subscription) {\n    const cleanup = subscription._cleanup;\n    if (cleanup === undefined) {\n        return;\n    }\n    subscription._cleanup = undefined;\n    if (!cleanup) {\n        return;\n    }\n    try {\n        if (typeof cleanup === \"function\") {\n            cleanup();\n        }\n        else {\n            const unsubscribe = getMethod(cleanup, \"unsubscribe\");\n            if (unsubscribe) {\n                unsubscribe.call(cleanup);\n            }\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n}\nfunction closeSubscription(subscription) {\n    subscription._observer = undefined;\n    subscription._queue = undefined;\n    subscription._state = \"closed\";\n}\nfunction flushSubscription(subscription) {\n    const queue = subscription._queue;\n    if (!queue) {\n        return;\n    }\n    subscription._queue = undefined;\n    subscription._state = \"ready\";\n    for (const item of queue) {\n        notifySubscription(subscription, item.type, item.value);\n        if (subscription._state === \"closed\") {\n            break;\n        }\n    }\n}\nfunction notifySubscription(subscription, type, value) {\n    subscription._state = \"running\";\n    const observer = subscription._observer;\n    try {\n        const m = observer ? getMethod(observer, type) : undefined;\n        switch (type) {\n            case \"next\":\n                if (m)\n                    m.call(observer, value);\n                break;\n            case \"error\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer, value);\n                else\n                    throw value;\n                break;\n            case \"complete\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer);\n                break;\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n    if (subscription._state === \"closed\") {\n        cleanupSubscription(subscription);\n    }\n    else if (subscription._state === \"running\") {\n        subscription._state = \"ready\";\n    }\n}\nfunction onNotify(subscription, type, value) {\n    if (subscription._state === \"closed\") {\n        return;\n    }\n    if (subscription._state === \"buffering\") {\n        subscription._queue = subscription._queue || [];\n        subscription._queue.push({ type, value });\n        return;\n    }\n    if (subscription._state !== \"ready\") {\n        subscription._state = \"buffering\";\n        subscription._queue = [{ type, value }];\n        enqueue(() => flushSubscription(subscription));\n        return;\n    }\n    notifySubscription(subscription, type, value);\n}\nexport class Subscription {\n    constructor(observer, subscriber) {\n        // ASSERT: observer is an object\n        // ASSERT: subscriber is callable\n        this._cleanup = undefined;\n        this._observer = observer;\n        this._queue = undefined;\n        this._state = \"initializing\";\n        const subscriptionObserver = new SubscriptionObserver(this);\n        try {\n            this._cleanup = subscriber.call(undefined, subscriptionObserver);\n        }\n        catch (e) {\n            subscriptionObserver.error(e);\n        }\n        if (this._state === \"initializing\") {\n            this._state = \"ready\";\n        }\n    }\n    get closed() {\n        return this._state === \"closed\";\n    }\n    unsubscribe() {\n        if (this._state !== \"closed\") {\n            closeSubscription(this);\n            cleanupSubscription(this);\n        }\n    }\n}\nexport class SubscriptionObserver {\n    constructor(subscription) { this._subscription = subscription; }\n    get closed() { return this._subscription._state === \"closed\"; }\n    next(value) { onNotify(this._subscription, \"next\", value); }\n    error(value) { onNotify(this._subscription, \"error\", value); }\n    complete() { onNotify(this._subscription, \"complete\"); }\n}\n/**\n * The basic Observable class. This primitive is used to wrap asynchronous\n * data streams in a common standardized data type that is interoperable\n * between libraries and can be composed to represent more complex processes.\n */\nexport class Observable {\n    constructor(subscriber) {\n        if (!(this instanceof Observable)) {\n            throw new TypeError(\"Observable cannot be called as a function\");\n        }\n        if (typeof subscriber !== \"function\") {\n            throw new TypeError(\"Observable initializer must be a function\");\n        }\n        this._subscriber = subscriber;\n    }\n    subscribe(nextOrObserver, onError, onComplete) {\n        if (typeof nextOrObserver !== \"object\" || nextOrObserver === null) {\n            nextOrObserver = {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            };\n        }\n        return new Subscription(nextOrObserver, this._subscriber);\n    }\n    pipe(first, ...mappers) {\n        // tslint:disable-next-line no-this-assignment\n        let intermediate = this;\n        for (const mapper of [first, ...mappers]) {\n            intermediate = mapper(intermediate);\n        }\n        return intermediate;\n    }\n    tap(nextOrObserver, onError, onComplete) {\n        const tapObserver = typeof nextOrObserver !== \"object\" || nextOrObserver === null\n            ? {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            }\n            : nextOrObserver;\n        return new Observable(observer => {\n            return this.subscribe({\n                next(value) {\n                    tapObserver.next && tapObserver.next(value);\n                    observer.next(value);\n                },\n                error(error) {\n                    tapObserver.error && tapObserver.error(error);\n                    observer.error(error);\n                },\n                complete() {\n                    tapObserver.complete && tapObserver.complete();\n                    observer.complete();\n                },\n                start(subscription) {\n                    tapObserver.start && tapObserver.start(subscription);\n                }\n            });\n        });\n    }\n    forEach(fn) {\n        return new Promise((resolve, reject) => {\n            if (typeof fn !== \"function\") {\n                reject(new TypeError(fn + \" is not a function\"));\n                return;\n            }\n            function done() {\n                subscription.unsubscribe();\n                resolve(undefined);\n            }\n            const subscription = this.subscribe({\n                next(value) {\n                    try {\n                        fn(value, done);\n                    }\n                    catch (e) {\n                        reject(e);\n                        subscription.unsubscribe();\n                    }\n                },\n                error(error) {\n                    reject(error);\n                },\n                complete() {\n                    resolve(undefined);\n                }\n            });\n        });\n    }\n    map(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                let propagatedValue = value;\n                try {\n                    propagatedValue = fn(value);\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(propagatedValue);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    filter(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                try {\n                    if (!fn(value))\n                        return;\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(value);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    reduce(fn, seed) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        const hasSeed = arguments.length > 1;\n        let hasValue = false;\n        let acc = seed;\n        return new C(observer => this.subscribe({\n            next(value) {\n                const first = !hasValue;\n                hasValue = true;\n                if (!first || hasSeed) {\n                    try {\n                        acc = fn(acc, value);\n                    }\n                    catch (e) {\n                        return observer.error(e);\n                    }\n                }\n                else {\n                    acc = value;\n                }\n            },\n            error(e) { observer.error(e); },\n            complete() {\n                if (!hasValue && !hasSeed) {\n                    return observer.error(new TypeError(\"Cannot reduce an empty sequence\"));\n                }\n                observer.next(acc);\n                observer.complete();\n            },\n        }));\n    }\n    concat(...sources) {\n        const C = getSpecies(this);\n        return new C(observer => {\n            let subscription;\n            let index = 0;\n            function startNext(next) {\n                subscription = next.subscribe({\n                    next(v) { observer.next(v); },\n                    error(e) { observer.error(e); },\n                    complete() {\n                        if (index === sources.length) {\n                            subscription = undefined;\n                            observer.complete();\n                        }\n                        else {\n                            startNext(C.from(sources[index++]));\n                        }\n                    },\n                });\n            }\n            startNext(this);\n            return () => {\n                if (subscription) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                }\n            };\n        });\n    }\n    flatMap(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => {\n            const subscriptions = [];\n            const outer = this.subscribe({\n                next(value) {\n                    let normalizedValue;\n                    if (fn) {\n                        try {\n                            normalizedValue = fn(value);\n                        }\n                        catch (e) {\n                            return observer.error(e);\n                        }\n                    }\n                    else {\n                        normalizedValue = value;\n                    }\n                    const inner = C.from(normalizedValue).subscribe({\n                        next(innerValue) { observer.next(innerValue); },\n                        error(e) { observer.error(e); },\n                        complete() {\n                            const i = subscriptions.indexOf(inner);\n                            if (i >= 0)\n                                subscriptions.splice(i, 1);\n                            completeIfDone();\n                        },\n                    });\n                    subscriptions.push(inner);\n                },\n                error(e) { observer.error(e); },\n                complete() { completeIfDone(); },\n            });\n            function completeIfDone() {\n                if (outer.closed && subscriptions.length === 0) {\n                    observer.complete();\n                }\n            }\n            return () => {\n                subscriptions.forEach(s => s.unsubscribe());\n                outer.unsubscribe();\n            };\n        });\n    }\n    [(Symbol.observable, SymbolObservable)]() { return this; }\n    static from(x) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        if (x == null) {\n            throw new TypeError(x + \" is not an object\");\n        }\n        const observableMethod = getMethod(x, SymbolObservable);\n        if (observableMethod) {\n            const observable = observableMethod.call(x);\n            if (Object(observable) !== observable) {\n                throw new TypeError(observable + \" is not an object\");\n            }\n            if (isObservable(observable) && observable.constructor === C) {\n                return observable;\n            }\n            return new C(observer => observable.subscribe(observer));\n        }\n        if (hasSymbol(\"iterator\")) {\n            const iteratorMethod = getMethod(x, SymbolIterator);\n            if (iteratorMethod) {\n                return new C(observer => {\n                    enqueue(() => {\n                        if (observer.closed)\n                            return;\n                        for (const item of iteratorMethod.call(x)) {\n                            observer.next(item);\n                            if (observer.closed)\n                                return;\n                        }\n                        observer.complete();\n                    });\n                });\n            }\n        }\n        if (Array.isArray(x)) {\n            return new C(observer => {\n                enqueue(() => {\n                    if (observer.closed)\n                        return;\n                    for (const item of x) {\n                        observer.next(item);\n                        if (observer.closed)\n                            return;\n                    }\n                    observer.complete();\n                });\n            });\n        }\n        throw new TypeError(x + \" is not observable\");\n    }\n    static of(...items) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        return new C(observer => {\n            enqueue(() => {\n                if (observer.closed)\n                    return;\n                for (const item of items) {\n                    observer.next(item);\n                    if (observer.closed)\n                        return;\n                }\n                observer.complete();\n            });\n        });\n    }\n    static get [SymbolSpecies]() { return this; }\n}\nif (hasSymbols()) {\n    Object.defineProperty(Observable, Symbol(\"extensions\"), {\n        value: {\n            symbol: SymbolObservable,\n            hostReportError,\n        },\n        configurable: true,\n    });\n}\nexport default Observable;\n", "/**\n * Unsubscribe from a subscription returned by something that looks like an observable,\n * but is not necessarily our observable implementation.\n */\nfunction unsubscribe(subscription) {\n    if (typeof subscription === \"function\") {\n        subscription();\n    }\n    else if (subscription && typeof subscription.unsubscribe === \"function\") {\n        subscription.unsubscribe();\n    }\n}\nexport default unsubscribe;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Filters the values emitted by another observable.\n * To be applied to an input observable using `pipe()`.\n */\nfunction filter(test) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        if (yield test(input)) {\n                            next(input);\n                        }\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default filter;\n", "/// <reference lib=\"es2018\" />\nimport { hasSymbol } from \"./_symbols\";\nexport function isAsyncIterator(thing) {\n    return thing && hasSymbol(\"asyncIterator\") && thing[Symbol.asyncIterator];\n}\nexport function isIterator(thing) {\n    return thing && hasSymbol(\"iterator\") && thing[Symbol.iterator];\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport { isAsyncIterator, isIterator } from \"./_util\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Maps the values emitted by another observable. In contrast to `map()`\n * the `mapper` function returns an array of values that will be emitted\n * separately.\n * Use `flatMap()` to map input values to zero, one or multiple output\n * values. To be applied to an input observable using `pipe()`.\n */\nfunction flatMap(mapper) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        var e_1, _a;\n                        const mapped = yield mapper(input);\n                        if (isIterator(mapped) || isAsyncIterator(mapped)) {\n                            try {\n                                for (var mapped_1 = __asyncValues(mapped), mapped_1_1; mapped_1_1 = yield mapped_1.next(), !mapped_1_1.done;) {\n                                    const element = mapped_1_1.value;\n                                    next(element);\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (mapped_1_1 && !mapped_1_1.done && (_a = mapped_1.return)) yield _a.call(mapped_1);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                        }\n                        else {\n                            mapped.map(output => next(output));\n                        }\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default flatMap;\n", "import { Observable } from \"./observable\";\n/**\n * Creates an observable that yields a new value every `period` milliseconds.\n * The first value emitted is 0, then 1, 2, etc. The first value is not emitted\n * immediately, but after the first interval.\n */\nexport default function interval(period) {\n    return new Observable(observer => {\n        let counter = 0;\n        const handle = setInterval(() => {\n            observer.next(counter++);\n        }, period);\n        return () => clearInterval(handle);\n    });\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n/**\n * Maps the values emitted by another observable to different values.\n * To be applied to an input observable using `pipe()`.\n */\nfunction map(mapper) {\n    return (observable) => {\n        return new Observable(observer => {\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(input) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        const mapped = yield mapper(input);\n                        next(mapped);\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default map;\n", "import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction merge(...observables) {\n    if (observables.length === 0) {\n        return Observable.from([]);\n    }\n    return new Observable(observer => {\n        let completed = 0;\n        const subscriptions = observables.map(input => {\n            return input.subscribe({\n                error(error) {\n                    observer.error(error);\n                    unsubscribeAll();\n                },\n                next(value) {\n                    observer.next(value);\n                },\n                complete() {\n                    if (++completed === observables.length) {\n                        observer.complete();\n                        unsubscribeAll();\n                    }\n                }\n            });\n        });\n        const unsubscribeAll = () => {\n            subscriptions.forEach(subscription => unsubscribe(subscription));\n        };\n        return unsubscribeAll;\n    });\n}\nexport default merge;\n", "import Observable from \"./observable\";\n// TODO: This observer iteration approach looks inelegant and expensive\n// Idea: Come up with super class for Subscription that contains the\n//       notify*, ... methods and use it here\n/**\n * A subject is a \"hot\" observable (see `multicast`) that has its observer\n * methods (`.next(value)`, `.error(error)`, `.complete()`) exposed.\n *\n * Be careful, though! With great power comes great responsibility. Only use\n * the `Subject` when you really need to trigger updates \"from the outside\" and\n * try to keep the code that can access it to a minimum. Return\n * `Observable.from(mySubject)` to not allow other code to mutate.\n */\nclass MulticastSubject extends Observable {\n    constructor() {\n        super(observer => {\n            this._observers.add(observer);\n            return () => this._observers.delete(observer);\n        });\n        this._observers = new Set();\n    }\n    next(value) {\n        for (const observer of this._observers) {\n            observer.next(value);\n        }\n    }\n    error(error) {\n        for (const observer of this._observers) {\n            observer.error(error);\n        }\n    }\n    complete() {\n        for (const observer of this._observers) {\n            observer.complete();\n        }\n    }\n}\nexport default MulticastSubject;\n", "import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n    const subject = new Subject();\n    let sourceSubscription;\n    let subscriberCount = 0;\n    return new Observable(observer => {\n        // Init source subscription lazily\n        if (!sourceSubscription) {\n            sourceSubscription = coldObservable.subscribe(subject);\n        }\n        // Pipe all events from `subject` into this observable\n        const subscription = subject.subscribe(observer);\n        subscriberCount++;\n        return () => {\n            subscriberCount--;\n            subscription.unsubscribe();\n            // Close source subscription once last subscriber has unsubscribed\n            if (subscriberCount === 0) {\n                unsubscribe(sourceSubscription);\n                sourceSubscription = undefined;\n            }\n        };\n    });\n}\nexport default multicast;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction scan(accumulator, seed) {\n    return (observable) => {\n        return new Observable(observer => {\n            let accumulated;\n            let index = 0;\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(value) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        const prevAcc = index === 0\n                            ? (typeof seed === \"undefined\" ? value : seed)\n                            : accumulated;\n                        accumulated = yield accumulator(prevAcc, value, index++);\n                        next(accumulated);\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default scan;\n", "export { default as filter } from \"./filter\";\nexport { default as flatMap } from \"./flatMap\";\nexport { default as interval } from \"./interval\";\nexport { default as map } from \"./map\";\nexport { default as merge } from \"./merge\";\nexport { default as multicast } from \"./multicast\";\nexport { default as Observable } from \"./observable\";\nexport { default as scan } from \"./scan\";\nexport { default as Subject } from \"./subject\";\nexport { default as unsubscribe } from \"./unsubscribe\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.allSettled = void 0;\n// Based on <https://github.com/es-shims/Promise.allSettled/blob/master/implementation.js>\nfunction allSettled(values) {\n    return Promise.all(values.map(item => {\n        const onFulfill = (value) => {\n            return { status: 'fulfilled', value };\n        };\n        const onReject = (reason) => {\n            return { status: 'rejected', reason };\n        };\n        const itemPromise = Promise.resolve(item);\n        try {\n            return itemPromise.then(onFulfill, onReject);\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }));\n}\nexports.allSettled = allSettled;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolEventType = void 0;\n/** Pool event type. Specifies the type of each `PoolEvent`. */\nvar PoolEventType;\n(function (PoolEventType) {\n    PoolEventType[\"initialized\"] = \"initialized\";\n    PoolEventType[\"taskCanceled\"] = \"taskCanceled\";\n    PoolEventType[\"taskCompleted\"] = \"taskCompleted\";\n    PoolEventType[\"taskFailed\"] = \"taskFailed\";\n    PoolEventType[\"taskQueued\"] = \"taskQueued\";\n    PoolEventType[\"taskQueueDrained\"] = \"taskQueueDrained\";\n    PoolEventType[\"taskStart\"] = \"taskStart\";\n    PoolEventType[\"terminated\"] = \"terminated\";\n})(PoolEventType = exports.PoolEventType || (exports.PoolEventType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Thread = void 0;\nconst symbols_1 = require(\"../symbols\");\nfunction fail(message) {\n    throw Error(message);\n}\n/** Thread utility functions. Use them to manage or inspect a `spawn()`-ed thread. */\nexports.Thread = {\n    /** Return an observable that can be used to subscribe to all errors happening in the thread. */\n    errors(thread) {\n        return thread[symbols_1.$errors] || fail(\"Error observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Return an observable that can be used to subscribe to internal events happening in the thread. Useful for debugging. */\n    events(thread) {\n        return thread[symbols_1.$events] || fail(\"Events observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Terminate a thread. Remember to terminate every thread when you are done using it. */\n    terminate(thread) {\n        return thread[symbols_1.$terminate]();\n    }\n};\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pool = exports.Thread = exports.PoolEventType = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst ponyfills_1 = require(\"../ponyfills\");\nconst implementation_1 = require(\"./implementation\");\nconst pool_types_1 = require(\"./pool-types\");\nObject.defineProperty(exports, \"PoolEventType\", { enumerable: true, get: function () { return pool_types_1.PoolEventType; } });\nconst thread_1 = require(\"./thread\");\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return thread_1.Thread; } });\nlet nextPoolID = 1;\nfunction createArray(size) {\n    const array = [];\n    for (let index = 0; index < size; index++) {\n        array.push(index);\n    }\n    return array;\n}\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction flatMap(array, mapper) {\n    return array.reduce((flattened, element) => [...flattened, ...mapper(element)], []);\n}\nfunction slugify(text) {\n    return text.replace(/\\W/g, \" \").trim().replace(/\\s+/g, \"-\");\n}\nfunction spawnWorkers(spawnWorker, count) {\n    return createArray(count).map(() => ({\n        init: spawnWorker(),\n        runningTasks: []\n    }));\n}\nclass WorkerPool {\n    constructor(spawnWorker, optionsOrSize) {\n        this.eventSubject = new observable_fns_1.Subject();\n        this.initErrors = [];\n        this.isClosing = false;\n        this.nextTaskID = 1;\n        this.taskQueue = [];\n        const options = typeof optionsOrSize === \"number\"\n            ? { size: optionsOrSize }\n            : optionsOrSize || {};\n        const { size = implementation_1.defaultPoolSize } = options;\n        this.debug = debug_1.default(`threads:pool:${slugify(options.name || String(nextPoolID++))}`);\n        this.options = options;\n        this.workers = spawnWorkers(spawnWorker, size);\n        this.eventObservable = observable_fns_1.multicast(observable_fns_1.Observable.from(this.eventSubject));\n        Promise.all(this.workers.map(worker => worker.init)).then(() => this.eventSubject.next({\n            type: pool_types_1.PoolEventType.initialized,\n            size: this.workers.length\n        }), error => {\n            this.debug(\"Error while initializing pool worker:\", error);\n            this.eventSubject.error(error);\n            this.initErrors.push(error);\n        });\n    }\n    findIdlingWorker() {\n        const { concurrency = 1 } = this.options;\n        return this.workers.find(worker => worker.runningTasks.length < concurrency);\n    }\n    runPoolTask(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const workerID = this.workers.indexOf(worker) + 1;\n            this.debug(`Running task #${task.id} on worker #${workerID}...`);\n            this.eventSubject.next({\n                type: pool_types_1.PoolEventType.taskStart,\n                taskID: task.id,\n                workerID\n            });\n            try {\n                const returnValue = yield task.run(yield worker.init);\n                this.debug(`Task #${task.id} completed successfully`);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskCompleted,\n                    returnValue,\n                    taskID: task.id,\n                    workerID\n                });\n            }\n            catch (error) {\n                this.debug(`Task #${task.id} failed`);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskFailed,\n                    taskID: task.id,\n                    error,\n                    workerID\n                });\n            }\n        });\n    }\n    run(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const runPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                const removeTaskFromWorkersRunningTasks = () => {\n                    worker.runningTasks = worker.runningTasks.filter(someRunPromise => someRunPromise !== runPromise);\n                };\n                // Defer task execution by one tick to give handlers time to subscribe\n                yield delay(0);\n                try {\n                    yield this.runPoolTask(worker, task);\n                }\n                finally {\n                    removeTaskFromWorkersRunningTasks();\n                    if (!this.isClosing) {\n                        this.scheduleWork();\n                    }\n                }\n            }))();\n            worker.runningTasks.push(runPromise);\n        });\n    }\n    scheduleWork() {\n        this.debug(`Attempt de-queueing a task in order to run it...`);\n        const availableWorker = this.findIdlingWorker();\n        if (!availableWorker)\n            return;\n        const nextTask = this.taskQueue.shift();\n        if (!nextTask) {\n            this.debug(`Task queue is empty`);\n            this.eventSubject.next({ type: pool_types_1.PoolEventType.taskQueueDrained });\n            return;\n        }\n        this.run(availableWorker, nextTask);\n    }\n    taskCompletion(taskID) {\n        return new Promise((resolve, reject) => {\n            const eventSubscription = this.events().subscribe(event => {\n                if (event.type === pool_types_1.PoolEventType.taskCompleted && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    resolve(event.returnValue);\n                }\n                else if (event.type === pool_types_1.PoolEventType.taskFailed && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    reject(event.error);\n                }\n                else if (event.type === pool_types_1.PoolEventType.terminated) {\n                    eventSubscription.unsubscribe();\n                    reject(Error(\"Pool has been terminated before task was run.\"));\n                }\n            });\n        });\n    }\n    settled(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCurrentlyRunningTasks = () => flatMap(this.workers, worker => worker.runningTasks);\n            const taskFailures = [];\n            const failureSubscription = this.eventObservable.subscribe(event => {\n                if (event.type === pool_types_1.PoolEventType.taskFailed) {\n                    taskFailures.push(event.error);\n                }\n            });\n            if (this.initErrors.length > 0) {\n                return Promise.reject(this.initErrors[0]);\n            }\n            if (allowResolvingImmediately && this.taskQueue.length === 0) {\n                yield ponyfills_1.allSettled(getCurrentlyRunningTasks());\n                return taskFailures;\n            }\n            yield new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === pool_types_1.PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(void 0);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            yield ponyfills_1.allSettled(getCurrentlyRunningTasks());\n            failureSubscription.unsubscribe();\n            return taskFailures;\n        });\n    }\n    completed(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settlementPromise = this.settled(allowResolvingImmediately);\n            const earlyExitPromise = new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === pool_types_1.PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(settlementPromise);\n                        }\n                        else if (event.type === pool_types_1.PoolEventType.taskFailed) {\n                            subscription.unsubscribe();\n                            reject(event.error);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            const errors = yield Promise.race([\n                settlementPromise,\n                earlyExitPromise\n            ]);\n            if (errors.length > 0) {\n                throw errors[0];\n            }\n        });\n    }\n    events() {\n        return this.eventObservable;\n    }\n    queue(taskFunction) {\n        const { maxQueuedJobs = Infinity } = this.options;\n        if (this.isClosing) {\n            throw Error(`Cannot schedule pool tasks after terminate() has been called.`);\n        }\n        if (this.initErrors.length > 0) {\n            throw this.initErrors[0];\n        }\n        const taskID = this.nextTaskID++;\n        const taskCompletion = this.taskCompletion(taskID);\n        taskCompletion.catch((error) => {\n            // Prevent unhandled rejections here as we assume the user will use\n            // `pool.completed()`, `pool.settled()` or `task.catch()` to handle errors\n            this.debug(`Task #${taskID} errored:`, error);\n        });\n        const task = {\n            id: taskID,\n            run: taskFunction,\n            cancel: () => {\n                if (this.taskQueue.indexOf(task) === -1)\n                    return;\n                this.taskQueue = this.taskQueue.filter(someTask => someTask !== task);\n                this.eventSubject.next({\n                    type: pool_types_1.PoolEventType.taskCanceled,\n                    taskID: task.id\n                });\n            },\n            then: taskCompletion.then.bind(taskCompletion)\n        };\n        if (this.taskQueue.length >= maxQueuedJobs) {\n            throw Error(\"Maximum number of pool tasks queued. Refusing to queue another one.\\n\" +\n                \"This usually happens for one of two reasons: We are either at peak \" +\n                \"workload right now or some tasks just won't finish, thus blocking the pool.\");\n        }\n        this.debug(`Queueing task #${task.id}...`);\n        this.taskQueue.push(task);\n        this.eventSubject.next({\n            type: pool_types_1.PoolEventType.taskQueued,\n            taskID: task.id\n        });\n        this.scheduleWork();\n        return task;\n    }\n    terminate(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isClosing = true;\n            if (!force) {\n                yield this.completed(true);\n            }\n            this.eventSubject.next({\n                type: pool_types_1.PoolEventType.terminated,\n                remainingQueue: [...this.taskQueue]\n            });\n            this.eventSubject.complete();\n            yield Promise.all(this.workers.map((worker) => __awaiter(this, void 0, void 0, function* () { return thread_1.Thread.terminate(yield worker.init); })));\n        });\n    }\n}\nWorkerPool.EventType = pool_types_1.PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nfunction PoolConstructor(spawnWorker, optionsOrSize) {\n    // The function exists only so we don't need to use `new` to create a pool (we still can, though).\n    // If the Pool is a class or not is an implementation detail that should not concern the user.\n    return new WorkerPool(spawnWorker, optionsOrSize);\n}\nPoolConstructor.EventType = pool_types_1.PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nexports.Pool = PoolConstructor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPromiseWithResolver = void 0;\nconst doNothing = () => undefined;\n/**\n * Creates a new promise and exposes its resolver function.\n * Use with care!\n */\nfunction createPromiseWithResolver() {\n    let alreadyResolved = false;\n    let resolvedTo;\n    let resolver = doNothing;\n    const promise = new Promise(resolve => {\n        if (alreadyResolved) {\n            resolve(resolvedTo);\n        }\n        else {\n            resolver = resolve;\n        }\n    });\n    const exposedResolver = (value) => {\n        alreadyResolved = true;\n        resolvedTo = value;\n        resolver(resolvedTo);\n    };\n    return [promise, exposedResolver];\n}\nexports.createPromiseWithResolver = createPromiseWithResolver;\n", "\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerEventType = void 0;\nconst symbols_1 = require(\"../symbols\");\n/** Event as emitted by worker thread. Subscribe to using `Thread.events(thread)`. */\nvar WorkerEventType;\n(function (WorkerEventType) {\n    WorkerEventType[\"internalError\"] = \"internalError\";\n    WorkerEventType[\"message\"] = \"message\";\n    WorkerEventType[\"termination\"] = \"termination\";\n})(WorkerEventType = exports.WorkerEventType || (exports.WorkerEventType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObservablePromise = void 0;\nconst observable_fns_1 = require(\"observable-fns\");\nconst doNothing = () => undefined;\nconst returnInput = (input) => input;\nconst runDeferred = (fn) => Promise.resolve().then(fn);\nfunction fail(error) {\n    throw error;\n}\nfunction isThenable(thing) {\n    return thing && typeof thing.then === \"function\";\n}\n/**\n * Creates a hybrid, combining the APIs of an Observable and a Promise.\n *\n * It is used to proxy async process states when we are initially not sure\n * if that async process will yield values once (-> Promise) or multiple\n * times (-> Observable).\n *\n * Note that the observable promise inherits some of the observable's characteristics:\n * The `init` function will be called *once for every time anyone subscribes to it*.\n *\n * If this is undesired, derive a hot observable from it using `makeHot()` and\n * subscribe to that.\n */\nclass ObservablePromise extends observable_fns_1.Observable {\n    constructor(init) {\n        super((originalObserver) => {\n            // tslint:disable-next-line no-this-assignment\n            const self = this;\n            const observer = Object.assign(Object.assign({}, originalObserver), { complete() {\n                    originalObserver.complete();\n                    self.onCompletion();\n                }, error(error) {\n                    originalObserver.error(error);\n                    self.onError(error);\n                },\n                next(value) {\n                    originalObserver.next(value);\n                    self.onNext(value);\n                } });\n            try {\n                this.initHasRun = true;\n                return init(observer);\n            }\n            catch (error) {\n                observer.error(error);\n            }\n        });\n        this.initHasRun = false;\n        this.fulfillmentCallbacks = [];\n        this.rejectionCallbacks = [];\n        this.firstValueSet = false;\n        this.state = \"pending\";\n    }\n    onNext(value) {\n        if (!this.firstValueSet) {\n            this.firstValue = value;\n            this.firstValueSet = true;\n        }\n    }\n    onError(error) {\n        this.state = \"rejected\";\n        this.rejection = error;\n        for (const onRejected of this.rejectionCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onRejected(error));\n        }\n    }\n    onCompletion() {\n        this.state = \"fulfilled\";\n        for (const onFulfilled of this.fulfillmentCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onFulfilled(this.firstValue));\n        }\n    }\n    then(onFulfilledRaw, onRejectedRaw) {\n        const onFulfilled = onFulfilledRaw || returnInput;\n        const onRejected = onRejectedRaw || fail;\n        let onRejectedCalled = false;\n        return new Promise((resolve, reject) => {\n            const rejectionCallback = (error) => {\n                if (onRejectedCalled)\n                    return;\n                onRejectedCalled = true;\n                try {\n                    resolve(onRejected(error));\n                }\n                catch (anotherError) {\n                    reject(anotherError);\n                }\n            };\n            const fulfillmentCallback = (value) => {\n                try {\n                    resolve(onFulfilled(value));\n                }\n                catch (error) {\n                    rejectionCallback(error);\n                }\n            };\n            if (!this.initHasRun) {\n                this.subscribe({ error: rejectionCallback });\n            }\n            if (this.state === \"fulfilled\") {\n                return resolve(onFulfilled(this.firstValue));\n            }\n            if (this.state === \"rejected\") {\n                onRejectedCalled = true;\n                return resolve(onRejected(this.rejection));\n            }\n            this.fulfillmentCallbacks.push(fulfillmentCallback);\n            this.rejectionCallbacks.push(rejectionCallback);\n        });\n    }\n    catch(onRejected) {\n        return this.then(undefined, onRejected);\n    }\n    finally(onCompleted) {\n        const handler = onCompleted || doNothing;\n        return this.then((value) => {\n            handler();\n            return value;\n        }, () => handler());\n    }\n    static from(thing) {\n        if (isThenable(thing)) {\n            return new ObservablePromise(observer => {\n                const onFulfilled = (value) => {\n                    observer.next(value);\n                    observer.complete();\n                };\n                const onRejected = (error) => {\n                    observer.error(error);\n                };\n                thing.then(onFulfilled, onRejected);\n            });\n        }\n        else {\n            return super.from(thing);\n        }\n    }\n}\nexports.ObservablePromise = ObservablePromise;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n", "\"use strict\";\n/*\n * This source file contains the code for proxying calls in the master thread to calls in the workers\n * by `.postMessage()`-ing.\n *\n * Keep in mind that this code can make or break the program's performance! Need to optimize more…\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProxyModule = exports.createProxyFunction = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst common_1 = require(\"../common\");\nconst observable_promise_1 = require(\"../observable-promise\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nlet nextJobUID = 1;\nconst dedupe = (array) => Array.from(new Set(array));\nconst isJobErrorMessage = (data) => data && data.type === messages_1.WorkerMessageType.error;\nconst isJobResultMessage = (data) => data && data.type === messages_1.WorkerMessageType.result;\nconst isJobStartMessage = (data) => data && data.type === messages_1.WorkerMessageType.running;\nfunction createObservableForJob(worker, jobUID) {\n    return new observable_fns_1.Observable(observer => {\n        let asyncType;\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker:\", event.data);\n            if (!event.data || event.data.uid !== jobUID)\n                return;\n            if (isJobStartMessage(event.data)) {\n                asyncType = event.data.resultType;\n            }\n            else if (isJobResultMessage(event.data)) {\n                if (asyncType === \"promise\") {\n                    if (typeof event.data.payload !== \"undefined\") {\n                        observer.next(common_1.deserialize(event.data.payload));\n                    }\n                    observer.complete();\n                    worker.removeEventListener(\"message\", messageHandler);\n                }\n                else {\n                    if (event.data.payload) {\n                        observer.next(common_1.deserialize(event.data.payload));\n                    }\n                    if (event.data.complete) {\n                        observer.complete();\n                        worker.removeEventListener(\"message\", messageHandler);\n                    }\n                }\n            }\n            else if (isJobErrorMessage(event.data)) {\n                const error = common_1.deserialize(event.data.error);\n                if (asyncType === \"promise\" || !asyncType) {\n                    observer.error(error);\n                }\n                else {\n                    observer.error(error);\n                }\n                worker.removeEventListener(\"message\", messageHandler);\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        return () => {\n            if (asyncType === \"observable\" || !asyncType) {\n                const cancelMessage = {\n                    type: messages_1.MasterMessageType.cancel,\n                    uid: jobUID\n                };\n                worker.postMessage(cancelMessage);\n            }\n            worker.removeEventListener(\"message\", messageHandler);\n        };\n    });\n}\nfunction prepareArguments(rawArgs) {\n    if (rawArgs.length === 0) {\n        // Exit early if possible\n        return {\n            args: [],\n            transferables: []\n        };\n    }\n    const args = [];\n    const transferables = [];\n    for (const arg of rawArgs) {\n        if (transferable_1.isTransferDescriptor(arg)) {\n            args.push(common_1.serialize(arg.send));\n            transferables.push(...arg.transferables);\n        }\n        else {\n            args.push(common_1.serialize(arg));\n        }\n    }\n    return {\n        args,\n        transferables: transferables.length === 0 ? transferables : dedupe(transferables)\n    };\n}\nfunction createProxyFunction(worker, method) {\n    return ((...rawArgs) => {\n        const uid = nextJobUID++;\n        const { args, transferables } = prepareArguments(rawArgs);\n        const runMessage = {\n            type: messages_1.MasterMessageType.run,\n            uid,\n            method,\n            args\n        };\n        debugMessages(\"Sending command to run function to worker:\", runMessage);\n        try {\n            worker.postMessage(runMessage, transferables);\n        }\n        catch (error) {\n            return observable_promise_1.ObservablePromise.from(Promise.reject(error));\n        }\n        return observable_promise_1.ObservablePromise.from(observable_fns_1.multicast(createObservableForJob(worker, uid)));\n    });\n}\nexports.createProxyFunction = createProxyFunction;\nfunction createProxyModule(worker, methodNames) {\n    const proxy = {};\n    for (const methodName of methodNames) {\n        proxy[methodName] = createProxyFunction(worker, methodName);\n    }\n    return proxy;\n}\nexports.createProxyModule = createProxyModule;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spawn = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst observable_fns_1 = require(\"observable-fns\");\nconst common_1 = require(\"../common\");\nconst promise_1 = require(\"../promise\");\nconst symbols_1 = require(\"../symbols\");\nconst master_1 = require(\"../types/master\");\nconst invocation_proxy_1 = require(\"./invocation-proxy\");\nconst debugMessages = debug_1.default(\"threads:master:messages\");\nconst debugSpawn = debug_1.default(\"threads:master:spawn\");\nconst debugThreadUtils = debug_1.default(\"threads:master:thread-utils\");\nconst isInitMessage = (data) => data && data.type === \"init\";\nconst isUncaughtErrorMessage = (data) => data && data.type === \"uncaughtError\";\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT\n    ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10)\n    : 10000;\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutHandle;\n        const timeout = new Promise((resolve, reject) => {\n            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n        });\n        const result = yield Promise.race([\n            promise,\n            timeout\n        ]);\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n}\nfunction receiveInitMessage(worker) {\n    return new Promise((resolve, reject) => {\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker before finishing initialization:\", event.data);\n            if (isInitMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                resolve(event.data);\n            }\n            else if (isUncaughtErrorMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                reject(common_1.deserialize(event.data.error));\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n    });\n}\nfunction createEventObservable(worker, workerTermination) {\n    return new observable_fns_1.Observable(observer => {\n        const messageHandler = ((messageEvent) => {\n            const workerEvent = {\n                type: master_1.WorkerEventType.message,\n                data: messageEvent.data\n            };\n            observer.next(workerEvent);\n        });\n        const rejectionHandler = ((errorEvent) => {\n            debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n            const workerEvent = {\n                type: master_1.WorkerEventType.internalError,\n                error: Error(errorEvent.reason)\n            };\n            observer.next(workerEvent);\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n        workerTermination.then(() => {\n            const terminationEvent = {\n                type: master_1.WorkerEventType.termination\n            };\n            worker.removeEventListener(\"message\", messageHandler);\n            worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n            observer.next(terminationEvent);\n            observer.complete();\n        });\n    });\n}\nfunction createTerminator(worker) {\n    const [termination, resolver] = promise_1.createPromiseWithResolver();\n    const terminate = () => __awaiter(this, void 0, void 0, function* () {\n        debugThreadUtils(\"Terminating worker\");\n        // Newer versions of worker_threads workers return a promise\n        yield worker.terminate();\n        resolver();\n    });\n    return { terminate, termination };\n}\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n    const workerErrors = workerEvents\n        .filter(event => event.type === master_1.WorkerEventType.internalError)\n        .map(errorEvent => errorEvent.error);\n    // tslint:disable-next-line prefer-object-spread\n    return Object.assign(raw, {\n        [symbols_1.$errors]: workerErrors,\n        [symbols_1.$events]: workerEvents,\n        [symbols_1.$terminate]: terminate,\n        [symbols_1.$worker]: worker\n    });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\nfunction spawn(worker, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        debugSpawn(\"Initializing new thread\");\n        const timeout = options && options.timeout ? options.timeout : initMessageTimeout;\n        const initMessage = yield withTimeout(receiveInitMessage(worker), timeout, `Timeout: Did not receive an init message from worker after ${timeout}ms. Make sure the worker calls expose().`);\n        const exposed = initMessage.exposed;\n        const { termination, terminate } = createTerminator(worker);\n        const events = createEventObservable(worker, termination);\n        if (exposed.type === \"function\") {\n            const proxy = invocation_proxy_1.createProxyFunction(worker);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else if (exposed.type === \"module\") {\n            const proxy = invocation_proxy_1.createProxyModule(worker, exposed.methods);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else {\n            const type = exposed.type;\n            throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n        }\n    });\n}\nexports.spawn = spawn;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Worker = exports.BlobWorker = exports.isWorkerRuntime = exports.Thread = exports.spawn = exports.Pool = void 0;\nconst implementation_1 = require(\"./implementation\");\nObject.defineProperty(exports, \"isWorkerRuntime\", { enumerable: true, get: function () { return implementation_1.isWorkerRuntime; } });\nvar pool_1 = require(\"./pool\");\nObject.defineProperty(exports, \"Pool\", { enumerable: true, get: function () { return pool_1.Pool; } });\nvar spawn_1 = require(\"./spawn\");\nObject.defineProperty(exports, \"spawn\", { enumerable: true, get: function () { return spawn_1.spawn; } });\nvar thread_1 = require(\"./thread\");\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return thread_1.Thread; } });\n/** Separate class to spawn workers from source code blobs or strings. */\nexports.BlobWorker = implementation_1.getWorkerImplementation().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexports.Worker = implementation_1.getWorkerImplementation().default;\n", "'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n", "\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.DefaultSerializer = exports.expose = exports.registerSerializer = void 0;\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_1.registerSerializer; } });\n__exportStar(require(\"./master/index\"), exports);\nvar index_1 = require(\"./worker/index\");\nObject.defineProperty(exports, \"expose\", { enumerable: true, get: function () { return index_1.expose; } });\nvar serializers_1 = require(\"./serializers\");\nObject.defineProperty(exports, \"DefaultSerializer\", { enumerable: true, get: function () { return serializers_1.DefaultSerializer; } });\nvar transferable_1 = require(\"./transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_1.Transfer; } });\n", "import Threads from \"./dist/index.js\"\n\nexport const registerSerializer = Threads.registerSerializer\nexport const spawn = Threads.spawn\nexport const BlobWorker = Threads.BlobWorker\nexport const DefaultSerializer = Threads.DefaultSerializer\nexport const Pool = Threads.Pool\nexport const Thread = Threads.Thread\nexport const Transfer = Threads.Transfer\nexport const Worker = Threads.Worker\n", "import WorkerContext from \"./dist/worker/index.js\"\n\nexport const expose = WorkerContext.expose\nexport const registerSerializer = WorkerContext.registerSerializer\nexport const Transfer = WorkerContext.Transfer\n", "// Copyright (c) 2020-2022 Climate Interactive / New Venture Fund\n\nimport { BlobWorker, spawn, Thread, Transfer, Worker } from 'threads'\n\nimport type { ModelRunner } from '@sdeverywhere/runtime'\nimport { BufferedRunModelParams, ModelListing, Outputs } from '@sdeverywhere/runtime'\n\n/**\n * Initialize a `ModelRunner` that runs the model asynchronously in a worker\n * (a Web Worker when running in a browser environment, or a worker thread\n * when running in a Node.js environment).\n *\n * In your app project, define a JavaScript file, called `worker.js` for example,\n * that initializes the generated model in the context of a worker thread:\n *\n * ```js\n * import { exposeModelWorker } from '@sdeverywhere/runtime-async/worker'\n * import loadGeneratedModel from './sde-prep/generated-model.js'\n *\n * exposeModelWorker(loadGeneratedModel)\n * ```\n *\n * Then, in your web app, call the `spawnAsyncModelRunner` function, which\n * will spawn the worker thread and initialize the `ModelRunner` that communicates\n * with the worker:\n *\n * ```js\n * import { spawnAsyncModelRunner } from '@sdeverywhere/runtime-async/runner'\n *\n * async function initApp() {\n *   // ...\n *   const runner = await spawnAsyncModelRunner({ path: './worker.js' })\n *   // ...\n * }\n * ```\n *\n * @param workerSpec Either a `path` to the worker JavaScript file, or the `source`\n * containing the full JavaScript source of the worker.\n */\nexport async function spawnAsyncModelRunner(workerSpec: { path: string } | { source: string }): Promise<ModelRunner> {\n  if (workerSpec['path']) {\n    return spawnAsyncModelRunnerWithWorker(new Worker(workerSpec['path']))\n  } else {\n    return spawnAsyncModelRunnerWithWorker(BlobWorker.fromText(workerSpec['source']))\n  }\n}\n\n/**\n * @hidden For internal use only\n */\nasync function spawnAsyncModelRunnerWithWorker(worker: Worker): Promise<ModelRunner> {\n  // Spawn the given Worker that contains the `ModelWorker`\n  const modelWorker = await spawn(worker)\n\n  // Wait for the worker to initialize the wasm model (in the worker thread)\n  const initResult = await modelWorker.initModel()\n\n  // Create a `ModelListing` instance if the listing was defined in the generated model\n  const modelListing = initResult.modelListing ? new ModelListing(initResult.modelListing) : undefined\n\n  // Maintain a `BufferedRunModelParams` instance that holds the I/O parameters\n  const params = new BufferedRunModelParams(modelListing)\n\n  // Use a flag to ensure that only one request is made at a time\n  let running = false\n\n  // Disallow `runModel` after the runner has been terminated\n  let terminated = false\n\n  return {\n    createOutputs: () => {\n      return new Outputs(initResult.outputVarIds, initResult.startTime, initResult.endTime, initResult.saveFreq)\n    },\n\n    runModel: async (inputs, outputs, options) => {\n      if (terminated) {\n        throw new Error('Async model runner has already been terminated')\n      } else if (running) {\n        throw new Error('Async model runner only supports one `runModel` call at a time')\n      } else {\n        running = true\n      }\n\n      // Update the I/O parameters\n      params.updateFromParams(inputs, outputs, options)\n\n      // Run the model in the worker. We pass the underlying `ArrayBuffer`\n      // instance back to the worker wrapped in a `Transfer` to make it\n      // no-copy transferable, and then the worker will return it back\n      // to us.\n      let ioBuffer: ArrayBuffer\n      try {\n        ioBuffer = await modelWorker.runModel(Transfer(params.getEncodedBuffer()))\n      } finally {\n        running = false\n      }\n\n      // Once the buffer is transferred to the worker, the buffer in the\n      // `BufferedRunModelParams` becomes \"detached\" and is no longer usable.\n      // After the buffer is transferred back from the worker, we need to\n      // restore the state of the object to use the new buffer.\n      params.updateFromEncodedBuffer(ioBuffer)\n\n      // Copy the output values and elapsed time from the buffer to the\n      // `Outputs` instance\n      params.finalizeOutputs(outputs)\n\n      return outputs\n    },\n\n    terminate: () => {\n      if (terminated) {\n        return Promise.resolve()\n      } else {\n        terminated = true\n        return Thread.terminate(modelWorker)\n      }\n    }\n  }\n}\n", "// Copyright (c) 2020-2022 Climate Interactive / New Venture Fund\n\nimport type { TransferDescriptor } from 'threads'\nimport { expose, Transfer } from 'threads/worker'\n\nimport type { GeneratedModel, RunnableModel } from '@sdeverywhere/runtime'\nimport { BufferedRunModelParams, createRunnableModel } from '@sdeverywhere/runtime'\n\n/** @hidden */\nlet initGeneratedModel: () => Promise<GeneratedModel>\n\n/** @hidden */\nlet runnableModel: RunnableModel\n\n/**\n * Maintain a `BufferedRunModelParams` instance that wraps the transferable buffer\n * containing the I/O parameters.\n * @hidden\n */\nconst params = new BufferedRunModelParams()\n\ninterface InitResult {\n  outputVarIds: string[]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  modelListing?: /*ModelListingSpecs*/ any\n  startTime: number\n  endTime: number\n  saveFreq: number\n  outputRowLength: number\n}\n\n/** @hidden */\nconst modelWorker = {\n  async initModel(): Promise<InitResult> {\n    if (runnableModel) {\n      throw new Error('RunnableModel was already initialized')\n    }\n\n    // Initialize the runnable model\n    const generatedModel = await initGeneratedModel()\n    runnableModel = createRunnableModel(generatedModel)\n\n    // Transfer the model metadata to the runner\n    return {\n      outputVarIds: runnableModel.outputVarIds,\n      modelListing: runnableModel.modelListing,\n      startTime: runnableModel.startTime,\n      endTime: runnableModel.endTime,\n      saveFreq: runnableModel.saveFreq,\n      outputRowLength: runnableModel.numSavePoints\n    }\n  },\n\n  runModel(ioBuffer: ArrayBuffer): TransferDescriptor<ArrayBuffer> {\n    if (!runnableModel) {\n      throw new Error('RunnableModel must be initialized before running the model in worker')\n    }\n\n    // Update the `BufferedRunModelParams` to use the values in the buffer that was transferred\n    // from the runner to the worker\n    params.updateFromEncodedBuffer(ioBuffer)\n\n    // Run the model synchronously on the worker thread using those I/O parameters\n    runnableModel.runModel(params)\n\n    // Transfer the buffer back to the runner\n    return Transfer(ioBuffer)\n  }\n}\n\n/**\n * Expose an object in the current worker thread that communicates with the\n * `ModelRunner` instance running in the main thread.  The exposed worker\n * object will take care of running the model on the worker thread and\n * sending the outputs back to the main thread.\n *\n * @param init The function that initializes the generated model instance that\n * is used in the worker thread.\n */\nexport function exposeModelWorker(init: () => Promise<GeneratedModel>): void {\n  // Save the initializer, which will be used when the runner calls `initModel`\n  // on the worker\n  initGeneratedModel = init\n\n  // Expose the worker implementation to `threads.js`\n  expose(modelWorker)\n}\n"],
  "mappings": "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",
  "names": ["registerSerializer", "BlobWorker", "require_common", "self", "init_symbols", "unsubscribe", "init_symbols", "__awaiter", "init_symbols", "__awaiter", "v", "__awaiter", "__awaiter", "PoolEventType", "__awaiter", "flatMap", "WorkerEventType", "self", "Transfer", "MasterMessageType", "WorkerMessageType", "__awaiter", "spawn", "require_master", "require_implementation_browser", "isWorkerRuntime", "postMessageToMaster", "subscribeToMasterMessages", "unsubscribe", "__awaiter", "isObservable", "expose", "exports", "Threads", "Worker", "WorkerContext", "registerSerializer", "Transfer", "Worker", "modelWorker", "params", "BufferedRunModelParams", "Transfer"]
}
