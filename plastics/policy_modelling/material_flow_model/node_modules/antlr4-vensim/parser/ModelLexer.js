// Generated from grammar/Model.g4 by ANTLR 4.12.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,38,350,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
6,1,6,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,4,17,172,8,17,11,17,12,17,173,
1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,5,18,186,8,18,10,18,12,
18,189,9,18,1,18,1,18,1,18,1,18,1,19,1,19,5,19,197,8,19,10,19,12,19,200,
9,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,
25,1,25,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,
1,31,1,31,1,32,1,32,5,32,234,8,32,10,32,12,32,237,9,32,1,32,1,32,1,32,5,
32,242,8,32,10,32,12,32,245,9,32,1,32,1,32,1,32,3,32,250,8,32,1,32,5,32,
253,8,32,10,32,12,32,256,9,32,1,32,3,32,259,8,32,1,33,3,33,262,8,33,1,34,
1,34,3,34,266,8,34,1,35,1,35,1,36,1,36,1,36,3,36,273,8,36,1,37,4,37,276,
8,37,11,37,12,37,277,1,38,1,38,1,39,1,39,3,39,284,8,39,1,39,1,39,1,39,3,
39,289,8,39,1,40,3,40,292,8,40,1,40,1,40,1,40,1,40,1,40,3,40,299,8,40,1,
41,1,41,3,41,303,8,41,1,41,1,41,1,41,3,41,308,8,41,1,41,3,41,311,8,41,1,
42,1,42,1,43,4,43,316,8,43,11,43,12,43,317,1,44,1,44,3,44,322,8,44,1,44,
1,44,1,45,1,45,3,45,328,8,45,1,45,1,45,1,46,4,46,333,8,46,11,46,12,46,334,
1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,4,49,345,8,49,11,49,12,49,346,1,
49,1,49,1,187,0,50,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,0,69,0,71,0,
73,34,75,0,77,0,79,0,81,0,83,0,85,0,87,0,89,35,91,36,93,0,95,0,97,37,99,
38,1,0,9,4,0,45,45,48,57,65,90,97,122,1,0,124,124,49,0,65,90,95,95,97,122,
168,168,170,170,173,173,175,175,178,181,183,186,188,190,192,214,216,246,
248,767,880,5759,5761,6157,6159,7615,7680,8191,8203,8205,8234,8238,8255,
8256,8276,8276,8288,8399,8448,8591,9312,9471,10102,10131,11264,11775,11904,
12287,12292,12295,12321,12335,12337,55295,63744,64829,64832,64975,65008,
65055,65072,65092,65095,65533,65536,131069,131072,196605,196608,262141,262144,
327677,327680,393213,393216,458749,458752,524285,524288,589821,589824,655357,
655360,720893,720896,786429,786432,851965,851968,917501,917504,983037,2,
0,36,39,48,57,1,0,48,57,1,0,49,57,2,0,43,43,45,45,5,0,10,10,13,13,34,34,
39,39,92,92,3,0,9,10,13,13,32,32,363,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
63,1,0,0,0,0,65,1,0,0,0,0,73,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,97,1,0,
0,0,0,99,1,0,0,0,1,101,1,0,0,0,3,103,1,0,0,0,5,107,1,0,0,0,7,109,1,0,0,0,
9,111,1,0,0,0,11,113,1,0,0,0,13,115,1,0,0,0,15,118,1,0,0,0,17,121,1,0,0,
0,19,123,1,0,0,0,21,125,1,0,0,0,23,139,1,0,0,0,25,148,1,0,0,0,27,154,1,0,
0,0,29,156,1,0,0,0,31,162,1,0,0,0,33,167,1,0,0,0,35,169,1,0,0,0,37,179,1,
0,0,0,39,194,1,0,0,0,41,203,1,0,0,0,43,205,1,0,0,0,45,207,1,0,0,0,47,209,
1,0,0,0,49,211,1,0,0,0,51,213,1,0,0,0,53,216,1,0,0,0,55,218,1,0,0,0,57,221,
1,0,0,0,59,223,1,0,0,0,61,226,1,0,0,0,63,229,1,0,0,0,65,249,1,0,0,0,67,261,
1,0,0,0,69,265,1,0,0,0,71,267,1,0,0,0,73,272,1,0,0,0,75,275,1,0,0,0,77,279,
1,0,0,0,79,288,1,0,0,0,81,298,1,0,0,0,83,310,1,0,0,0,85,312,1,0,0,0,87,315,
1,0,0,0,89,319,1,0,0,0,91,325,1,0,0,0,93,332,1,0,0,0,95,336,1,0,0,0,97,338,
1,0,0,0,99,344,1,0,0,0,101,102,5,58,0,0,102,2,1,0,0,0,103,104,5,60,0,0,104,
105,5,45,0,0,105,106,5,62,0,0,106,4,1,0,0,0,107,108,5,124,0,0,108,6,1,0,
0,0,109,110,5,44,0,0,110,8,1,0,0,0,111,112,5,40,0,0,112,10,1,0,0,0,113,114,
5,41,0,0,114,12,1,0,0,0,115,116,5,45,0,0,116,117,5,62,0,0,117,14,1,0,0,0,
118,119,5,58,0,0,119,120,5,61,0,0,120,16,1,0,0,0,121,122,5,91,0,0,122,18,
1,0,0,0,123,124,5,93,0,0,124,20,1,0,0,0,125,126,5,58,0,0,126,127,5,73,0,
0,127,128,5,78,0,0,128,129,5,84,0,0,129,130,5,69,0,0,130,131,5,82,0,0,131,
132,5,80,0,0,132,133,5,79,0,0,133,134,5,76,0,0,134,135,5,65,0,0,135,136,
5,84,0,0,136,137,5,69,0,0,137,138,5,58,0,0,138,22,1,0,0,0,139,140,5,58,0,
0,140,141,5,69,0,0,141,142,5,88,0,0,142,143,5,67,0,0,143,144,5,69,0,0,144,
145,5,80,0,0,145,146,5,84,0,0,146,147,5,58,0,0,147,24,1,0,0,0,148,149,5,
58,0,0,149,150,5,78,0,0,150,151,5,79,0,0,151,152,5,84,0,0,152,153,5,58,0,
0,153,26,1,0,0,0,154,155,5,94,0,0,155,28,1,0,0,0,156,157,5,58,0,0,157,158,
5,65,0,0,158,159,5,78,0,0,159,160,5,68,0,0,160,161,5,58,0,0,161,30,1,0,0,
0,162,163,5,58,0,0,163,164,5,79,0,0,164,165,5,82,0,0,165,166,5,58,0,0,166,
32,1,0,0,0,167,168,5,59,0,0,168,34,1,0,0,0,169,171,5,123,0,0,170,172,7,0,
0,0,171,170,1,0,0,0,172,173,1,0,0,0,173,171,1,0,0,0,173,174,1,0,0,0,174,
175,1,0,0,0,175,176,5,125,0,0,176,177,1,0,0,0,177,178,6,17,0,0,178,36,1,
0,0,0,179,180,5,42,0,0,180,181,5,42,0,0,181,182,5,42,0,0,182,183,5,42,0,
0,183,187,1,0,0,0,184,186,9,0,0,0,185,184,1,0,0,0,186,189,1,0,0,0,187,188,
1,0,0,0,187,185,1,0,0,0,188,190,1,0,0,0,189,187,1,0,0,0,190,191,5,124,0,
0,191,192,1,0,0,0,192,193,6,18,0,0,193,38,1,0,0,0,194,198,5,126,0,0,195,
197,8,1,0,0,196,195,1,0,0,0,197,200,1,0,0,0,198,196,1,0,0,0,198,199,1,0,
0,0,199,201,1,0,0,0,200,198,1,0,0,0,201,202,6,19,0,0,202,40,1,0,0,0,203,
204,5,42,0,0,204,42,1,0,0,0,205,206,5,47,0,0,206,44,1,0,0,0,207,208,5,43,
0,0,208,46,1,0,0,0,209,210,5,45,0,0,210,48,1,0,0,0,211,212,5,60,0,0,212,
50,1,0,0,0,213,214,5,60,0,0,214,215,5,61,0,0,215,52,1,0,0,0,216,217,5,62,
0,0,217,54,1,0,0,0,218,219,5,62,0,0,219,220,5,61,0,0,220,56,1,0,0,0,221,
222,5,61,0,0,222,58,1,0,0,0,223,224,5,61,0,0,224,225,5,61,0,0,225,60,1,0,
0,0,226,227,5,60,0,0,227,228,5,62,0,0,228,62,1,0,0,0,229,230,5,33,0,0,230,
64,1,0,0,0,231,235,3,67,33,0,232,234,3,69,34,0,233,232,1,0,0,0,234,237,1,
0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,250,1,0,0,0,237,235,1,0,0,0,238,
243,3,67,33,0,239,242,3,69,34,0,240,242,5,32,0,0,241,239,1,0,0,0,241,240,
1,0,0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,246,1,0,0,0,
245,243,1,0,0,0,246,247,3,69,34,0,247,250,1,0,0,0,248,250,3,89,44,0,249,
231,1,0,0,0,249,238,1,0,0,0,249,248,1,0,0,0,250,258,1,0,0,0,251,253,3,99,
49,0,252,251,1,0,0,0,253,256,1,0,0,0,254,252,1,0,0,0,254,255,1,0,0,0,255,
257,1,0,0,0,256,254,1,0,0,0,257,259,3,63,31,0,258,254,1,0,0,0,258,259,1,
0,0,0,259,66,1,0,0,0,260,262,7,2,0,0,261,260,1,0,0,0,262,68,1,0,0,0,263,
266,7,3,0,0,264,266,3,67,33,0,265,263,1,0,0,0,265,264,1,0,0,0,266,70,1,0,
0,0,267,268,7,4,0,0,268,72,1,0,0,0,269,273,3,75,37,0,270,273,3,79,39,0,271,
273,3,91,45,0,272,269,1,0,0,0,272,270,1,0,0,0,272,271,1,0,0,0,273,74,1,0,
0,0,274,276,3,71,35,0,275,274,1,0,0,0,276,277,1,0,0,0,277,275,1,0,0,0,277,
278,1,0,0,0,278,76,1,0,0,0,279,280,7,5,0,0,280,78,1,0,0,0,281,283,3,81,40,
0,282,284,3,83,41,0,283,282,1,0,0,0,283,284,1,0,0,0,284,289,1,0,0,0,285,
286,3,87,43,0,286,287,3,83,41,0,287,289,1,0,0,0,288,281,1,0,0,0,288,285,
1,0,0,0,289,80,1,0,0,0,290,292,3,87,43,0,291,290,1,0,0,0,291,292,1,0,0,0,
292,293,1,0,0,0,293,294,5,46,0,0,294,299,3,87,43,0,295,296,3,87,43,0,296,
297,5,46,0,0,297,299,1,0,0,0,298,291,1,0,0,0,298,295,1,0,0,0,299,82,1,0,
0,0,300,302,5,101,0,0,301,303,3,85,42,0,302,301,1,0,0,0,302,303,1,0,0,0,
303,304,1,0,0,0,304,311,3,87,43,0,305,307,5,69,0,0,306,308,3,85,42,0,307,
306,1,0,0,0,307,308,1,0,0,0,308,309,1,0,0,0,309,311,3,87,43,0,310,300,1,
0,0,0,310,305,1,0,0,0,311,84,1,0,0,0,312,313,7,6,0,0,313,86,1,0,0,0,314,
316,3,71,35,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,1,0,0,0,317,318,1,
0,0,0,318,88,1,0,0,0,319,321,5,34,0,0,320,322,3,93,46,0,321,320,1,0,0,0,
321,322,1,0,0,0,322,323,1,0,0,0,323,324,5,34,0,0,324,90,1,0,0,0,325,327,
5,39,0,0,326,328,3,93,46,0,327,326,1,0,0,0,327,328,1,0,0,0,328,329,1,0,0,
0,329,330,5,39,0,0,330,92,1,0,0,0,331,333,3,95,47,0,332,331,1,0,0,0,333,
334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,94,1,0,0,0,336,337,8,7,0,
0,337,96,1,0,0,0,338,339,5,58,0,0,339,340,5,78,0,0,340,341,5,65,0,0,341,
342,5,58,0,0,342,98,1,0,0,0,343,345,7,8,0,0,344,343,1,0,0,0,345,346,1,0,
0,0,346,344,1,0,0,0,346,347,1,0,0,0,347,348,1,0,0,0,348,349,6,49,0,0,349,
100,1,0,0,0,26,0,173,187,198,235,241,243,249,254,258,261,265,272,277,283,
288,291,298,302,307,310,317,321,327,334,346,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ModelLexer extends antlr4.Lexer {

    static grammarFileName = "Model.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "':'", "'<->'", "'|'", "','", "'('", "')'", 
                         "'->'", "':='", "'['", "']'", "':INTERPOLATE:'", 
                         "':EXCEPT:'", "':NOT:'", "'^'", "':AND:'", "':OR:'", 
                         "';'", null, null, null, "'*'", "'/'", "'+'", "'-'", 
                         "'<'", "'<='", "'>'", "'>='", "'='", "'=='", "'<>'", 
                         "'!'", null, null, null, null, "':NA:'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "Encoding", "Group", "UnitsDoc", "Star", 
                          "Div", "Plus", "Minus", "Less", "LessEqual", "Greater", 
                          "GreaterEqual", "Equal", "TwoEqual", "NotEqual", 
                          "Exclamation", "Id", "Const", "StringLiteral", 
                          "StringConst", "Keyword", "Whitespace" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "Encoding", "Group", 
                      "UnitsDoc", "Star", "Div", "Plus", "Minus", "Less", 
                      "LessEqual", "Greater", "GreaterEqual", "Equal", "TwoEqual", 
                      "NotEqual", "Exclamation", "Id", "IdHead", "IdChar", 
                      "Digit", "Const", "IntegerConst", "NonzeroDigit", 
                      "FloatingConst", "FractionalConstant", "ExponentPart", 
                      "Sign", "DigitSeq", "StringLiteral", "StringConst", 
                      "SCharSequence", "SChar", "Keyword", "Whitespace" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

ModelLexer.EOF = antlr4.Token.EOF;
ModelLexer.T__0 = 1;
ModelLexer.T__1 = 2;
ModelLexer.T__2 = 3;
ModelLexer.T__3 = 4;
ModelLexer.T__4 = 5;
ModelLexer.T__5 = 6;
ModelLexer.T__6 = 7;
ModelLexer.T__7 = 8;
ModelLexer.T__8 = 9;
ModelLexer.T__9 = 10;
ModelLexer.T__10 = 11;
ModelLexer.T__11 = 12;
ModelLexer.T__12 = 13;
ModelLexer.T__13 = 14;
ModelLexer.T__14 = 15;
ModelLexer.T__15 = 16;
ModelLexer.T__16 = 17;
ModelLexer.Encoding = 18;
ModelLexer.Group = 19;
ModelLexer.UnitsDoc = 20;
ModelLexer.Star = 21;
ModelLexer.Div = 22;
ModelLexer.Plus = 23;
ModelLexer.Minus = 24;
ModelLexer.Less = 25;
ModelLexer.LessEqual = 26;
ModelLexer.Greater = 27;
ModelLexer.GreaterEqual = 28;
ModelLexer.Equal = 29;
ModelLexer.TwoEqual = 30;
ModelLexer.NotEqual = 31;
ModelLexer.Exclamation = 32;
ModelLexer.Id = 33;
ModelLexer.Const = 34;
ModelLexer.StringLiteral = 35;
ModelLexer.StringConst = 36;
ModelLexer.Keyword = 37;
ModelLexer.Whitespace = 38;



